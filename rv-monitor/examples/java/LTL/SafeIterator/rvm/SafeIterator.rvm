package rvm;

import java.io.*;
import java.util.*;

// The UnsafeIterator property is designed 
// to match a case where a Collection that 
// is in the process of iteration is modified 
// and iteration continues.  

full-binding SafeIterator(Collection c, Iterator i) {
 
        event create(Collection c, Iterator i) {} // after
        event updatesource(Collection c) {} // after remove add 
        event next(Iterator i) {} // before

        ltl : [](next => (not updatesource S create))

        @violation {
           System.out.println("improper iterator usage");
        }
}


