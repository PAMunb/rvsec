package com.example.myapp;

import android.media.MediaPlayer;
import android.util.Log;
import android.media.MediaPlayer.OnPreparedListener;
import android.app.AlertDialog;
import android.app.Activity;
import android.content.DialogInterface;

SetOnPreparedListener(){
  MediaPlayer toFix;

  //This event corresponds to setting the on prepared listener
  event setOnPreparedListener(){} 

  //This event corresponds to calling mp.start() in the code
  event start(MediaPlayer m){ toFix = m; }
 
  //more correctly, we could use a cfg to guarantee that start is called within
  //the context of the onPrepared method, but we keep this simple for
  //illustrative purposes and to correspond directly with the original property
  //we were given 
  ltl : [](start => <*> setOnPreparedListener)

  @violation {
      AlertDialog.Builder builder = new AlertDialog.Builder(__ACTIVITY);
      builder.setMessage("Media player called without setting the prepared listener, setting listener....");
      builder.setPositiveButton("Ok",new DialogInterface.OnClickListener() {
          public void onClick(DialogInterface dialog, int id) {
              // User clicked OK button
              //here we fix the code so that start is instead called
              //by the handler
              toFix.setOnPreparedListener(new OnPreparedListener(){
                  @Override
                  public void onPrepared(MediaPlayer mp){
                      mp.start();
                  }
              });
          }
      });
      builder.create().show();
      __SKIP;
  }
}
