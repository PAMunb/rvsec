package mop;

import javax.crypto.CipherInputStream;
import java.io.InputStream;
import javax.crypto.Cipher;

import br.unb.cic.mop.eh.*;
import br.unb.cic.mop.ExecutionContext;

CipherInputStreamSpec() {

    event c1 after(): call(public CipherInputStream.new(InputStream, Cipher)) { }

    event r1 after(): call(public int CipherInputStream.read()) || call(public int CipherInputStream.read(byte[])) {  }

    event r2 after(byte[] arr, int offset, int len):
      call(public int CipherInputStream.read(byte[], int, int)) &&
      args(arr, offset, len) { }

    event cl1 after(): call(public void CipherInputStream.close()) { }

    ere : c1 (r1 | r2)+ cl1

    @fail {
       ErrorCollector.instance().addError(new ErrorDescription(ErrorType.InvalidSequenceOfMethodCalls, "CipherInputStreamSpec", "" + __LOC));
       __RESET;
    }
}