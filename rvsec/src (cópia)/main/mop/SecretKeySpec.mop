package mop;

import br.unb.cic.mop.ExecutionContext;

import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;

/**
 * SecretKeySpec
 *
 * A JavaMOP specification of the correct usage of the
 * javax.crypto.spec.SecretKey.
 *
 * @see https://github.com/CROSSINGTUD/Crypto-API-Rules/blob/master/JavaCryptographicArchitecture/src/SecretKey.crysl
 */
SecretKeySpec(SecretKey secretKey) {


   event e1 after(SecretKey secretKey) returning(byte[] key):
      call(public byte[] SecretKey.getEncoded()) &&
      target(secretKey) &&
      condition(ExecutionContext.instance().validate(Property.GENERATED_KEY, secretKey)) {
        ExecutionContext.instance().setProperty(Property.RANDOMIZED, key);
   }

   ere : e1*

   @match {
     // __RESET;
   }

}