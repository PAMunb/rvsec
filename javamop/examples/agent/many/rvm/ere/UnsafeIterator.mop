// Copyright (c) 2002-2014 JavaMOP Team. All Rights Reserved.
package mop;

import java.io.*;
import java.util.*;

// The UnsafeIterator property is designed 
// to match a case where a Collection that 
// is in the process of iteration is modified 
// and iteration continues.  

UnsafeIterator(Collection c, Iterator i) {

	event create after(Collection c) 
		returning(Iterator i) : 
		call(Iterator Collection+.iterator()) && target(c) {}

	event updatesource after(Collection c) : 
		(call(* Collection+.remove*(..)) || call(* Collection+.add*(..))) && target(c) {}

	event next before(Iterator i) : 
	call(* Iterator.next()) && target(i) {}

	ere : create next* updatesource updatesource* next

	@match {
		System.out.println("improper iterator usage");
	}
}






